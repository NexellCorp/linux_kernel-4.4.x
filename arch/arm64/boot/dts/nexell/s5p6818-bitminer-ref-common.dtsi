/*
 * Copyright (C) 2018  Nexell Co., Ltd.
 * Author: Jinyong Lee <justin@nexell.co.kr>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include "s5p6818.dtsi"

#define PMIC_PDATA_INIT(_id, _rname, _minuv,    \
                        _maxuv, _init_uv, _init_enable,         \
                        _set_init_uV, _slp_slots)       \
                regulator-name = _rname;                \
                regulator-min-microvolt = <_minuv>;     \
                regulator-max-microvolt = <_maxuv>;     \
                nx,id = <_id>;                          \
                nx,init_enable = <_init_enable>;        \
                nx,init_uV = <_init_uv>;                \
                nx,set_init_uV = <_set_init_uV>;        \
                nx,sleep_slots = <_slp_slots>;

/ {
	memory {
		device_type = "memory";
		reg = <0x40000000 0x0db00000>;
	};

	aliases {
	};

	soc {
		#include "s5p6818-pinctrl.dtsi"
		clocks {
			uart3:uart@c00ab000 { clock-frequency = <147500000>; };
			vip0:vip@c00c1000 { src-force = <4>; };
			i2c2:i2c@c00b0000  { clock-frequency = <200000000>; };
			pwm0:pwm0@c00ba000 {
				clk-input = <I_PLL2>;
				clock-frequency = <10000000>;
			};
			pwm1:pwm1@c00ba000 {
				clk-input = <I_PLL2>;
				clock-frequency = <10000000>;
			};
			pwm2:pwm2@c00be000 {
				clk-input = <I_PLL2>;
				clock-frequency = <10000000>;
			};
			pwm3:pwm3@c00be000 {
				clk-input = <I_PLL2>;
				clock-frequency = <10000000>;
			};

		};

		serial0:serial@c00a1000 {
			dmas = <&pl08xdma0 2>, <&pl08xdma0 3>;
			dma-names = "tx", "rx";
			status ="okay";
		};

		serial1:serial@c00a0000 {
			dmas = <&pl08xdma0 0>, <&pl08xdma0 1>;
			dma-names = "tx", "rx";
			status ="okay";
		};

		serial2:serial@c00a2000 {
			dmas = <&pl08xdma0 4>, <&pl08xdma0 5>;
			dma-names = "tx", "rx";
			status ="okay";
		};

		serial3:serial@c00a3000 {
			status ="okay";
		};

		serial4:serial@c006d000 {
			status ="okay";
		};

		amba {
			pl08xdma0:pl08xdma@c0000000 {
				use_isr;

				ch12 {
					slave_wait_flush_dma;
				};

				ch13 {
					slave_wait_flush_dma;
				};

				ch14 {
					slave_wait_flush_dma;
				};

				ch15 {
					slave_wait_flush_dma;
				};
			};

			pl08xdma1:pl08xdma@c0001000 {
				use_isr;

				ch0 {
					slave_wait_flush_dma;
				};

				ch1 {
					slave_wait_flush_dma;
				};
			};
		};

		tmuctrl_0: tmuctrl@c0096000 {
			status = "okay";
		};

		thermal-zones {
			cpu0_thermal: cpu0-thermal {
				thermal-sensors = <&tmuctrl_0>;
				polling-delay-passive = <1000>;
				polling-delay = <1000>;
				trips {
					cpu_alert0: cpu-alert-0 {
						temperature = <80000>;
						hysteresis = <100000>;
						type = "active";
					};
					cpu_alert1: cpu-alert-1 {
						temperature = <85000>;
						hysteresis = <100000>;
						type = "passive";
					};
					cpu_alert2: cpu-alert-2 {
						temperature = <100000>;
						hysteresis = <100000>;
						type = "passive";
					};
					cpu-crit-0 {
						temperature = <115000>;
						hysteresis = <100000>;
						type = "critical";
					};
				};
			};
		};

		dw_mmc_2:dw_mmc@c0069000 {
			num-slots = <1>;
			bus-width = <4>;
			pinctrl-0 = <&sdmmc2_cclk &sdmmc2_cmd
						&sdmmc2_bus4>;
			cap-mmc-highspeed;
			broken-cd;
			non-removable;
			clock-frequency = <50000000>;
			card-detect-delay = <200>;
			disable-wp;
			status = "okay";
			nexell,drive_dly = <0x0>;
			nexell,drive_shift = <0x01>;
			nexell,sample_dly = <0x00>;
			nexell,sample_shift = <0x02>;
		};

		watchdog@c0019000 {
			status = "okay";
		};

		rtc@c0010c00 {
			status = "okay";
		};

		gmac0:ethernet@c0060000 {
			pinctrl-names = "default";
			pinctrl-0 = <&gmac_pins>;

			status = "okay";
			#address-cells = <0x1>;
			#size-cells = <0x0>;

			snps,phy-addr = <3>;

			boost-busfreq;
			boost-busfreq-timeout = <100000>;

			mdio {
				#address-cells = <1>;
				#size-cells = <0>;

				ethernet_phy: ethernet-phy@3 {
					reg = <3>;
					fixed-link {
						speed = <1000>;
						full-duplex;
					};
				};
			};
		};

		adc:adc@c0053000 {
			status = "okay";
		};

		pwm:pwm@c0018000 {
			clock-names = "timers", "pwm-tclk0", "pwm-tclk1";
			clocks = <&pclk>, <&pwm0>, <&pwm1>;
			pinctrl-names = "default";
			pinctrl-0 = <&pwm0_pin &pwm1_pin>;
			samsung,pwm-outputs = <0>, <1>;
			status = "okay";
		};

		pinctrl@C0010000 {
			key_power:key_power {
				nexell,pins = "gpioa-3";
				nexell,pin-function = <0>;
				nexell,pin-pull = <1>;
				nexell,pin-strength = <0>;
			};
			pmic_irq:pmic_irq{
				nexell,pins = "alive-4";
				nexell,pin-function = <NX_PIN_FUNC0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};

		};

	};	/*** soc ***/

	i2c_gpio10: i2c@10 {
		compatible = "i2c-gpio";
		gpios = <&gpio_d 3 0	/* sda */
			&gpio_d 2 0	/* scl */
			>;

		i2c-gpio,delay-us = <1>;	/* ~100kHz */
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

	};

	gpio_key: gpio_keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&key_power>;

		power {
			label = "Power";
			gpios = <&gpio_a 3 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_F24>;
		};
	};

	nexell-ion@0 {
		compatible = "nexell,ion";

		heap_sys_user@0 {
			heap-type = "ion_system";
		};

		heap_sys_contig@0 {
			heap-type = "ion_system_contig";
		};

		heap_dma@0 {
			heap-type = "ion_dma";
		};
	};

	leds {
		compatible = "gpio-leds";

		led_err {
			label ="red";
			gpios = <&gpio_a 4 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "timer";
			default-state = "off";
		};

		led_ok {
			label ="green";
			gpios = <&gpio_a 5 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "timer";
			default-state = "off";
		};
	};

};

&i2c_gpio10 {
	nxe2000@32 {
		compatible = "nexell,nxe2000";
		reg = <0x32>;
		interrupt-parent = <&alive_0>;
		interrupts = <0x5 IRQ_TYPE_EDGE_FALLING>;
		pinctrl-names = "default";
		pinctrl-0 = <&pmic_irq>;

		regulators {
			VCC_DCDC1:
				dcdc2	{ PMIC_PDATA_INIT( 1,
					"nxe2000_dcdc2",
					1000000, 1500000,
					1200000, 1, 0, 0x4)
					regulator-always-on;
					regulator-boot-on;};
			VCC_LDO0:
				ldo1	{ PMIC_PDATA_INIT( 5,
					"nxe2000_ldo1",
					1000000, 3500000,
					3300000, 1, 1, 0x0)
					regulator-always-on;
					regulator-boot-on;};
			VCC_LDO3:
				ldo4	{ PMIC_PDATA_INIT( 8,
					"nxe2000_ldo4",
					1000000, 3500000,
					1800000, 1, 1, 0x2)
					regulator-always-on;
					regulator-boot-on;};
			VCC_LDO9:
				ldo10	{ PMIC_PDATA_INIT(14,
					"nxe2000_ldo10",
					1000000, 3500000,
					1000000, 1, 1, 0x4)
					regulator-always-on;
					regulator-boot-on;};
		}; /* regulators */
	};
};

&spi_0 {
	status = "okay";
/*	cs-gpios = <&gpio_c 30 0>; */
	not-queued-transfer = <1>;
	spidev@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <20000000>;
		controller-data {
			cs-per-message = <1>;
			samsung,spi-feedback-delay = <0>;
		};
	};
};

&spi_2 {
	status = "okay";
/*	cs-gpios = <&gpio_c 10 0>; */
	not-queued-transfer = <1>;
	spidev@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <20000000>;
		controller-data {
			cs-per-message = <1>;
			samsung,spi-feedback-delay = <0>;
		};
	};
};

