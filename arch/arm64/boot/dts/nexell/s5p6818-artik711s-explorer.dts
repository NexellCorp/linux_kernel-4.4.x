/*
 * Copyright (C) 2018 Samsung Electronics
 * Author: Jaewon Kim <jaewon02.kim@samsung.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/dts-v1/;
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/input/input.h>
#include "s5p6818-artik711s.dtsi"

#define PMIC_PDATA_INIT(_id, _rname, _minuv,	\
			_maxuv, _init_uv, _init_enable,		\
			_set_init_uV, _slp_slots)	\
		regulator-name = _rname;		\
		regulator-min-microvolt = <_minuv>;	\
		regulator-max-microvolt = <_maxuv>;	\
		nx,id = <_id>;				\
		nx,init_enable = <_init_enable>;	\
		nx,init_uV = <_init_uv>;		\
		nx,set_init_uV = <_set_init_uV>;	\
		nx,sleep_slots = <_slp_slots>;

/ {
	model = "Samsung artik711s raptor board based on s5p6818";
	compatible = "samsung,artik711s-raptor", "samsung,artik710-raptor",
		   "samsung,artik711s", "samsung,artik710",
		   "nexell,s5p6818";

	aliases {
		i2c7 = &i2c_gpio7;
		i2c10 = &i2c_gpio10;
	};

	nx-v4l2 {
		status = "okay";
	};

	nx-devfreq {
		pll = <0>;
		status = "okay";
	};

	soc {

		clocks {
			vip0:vip@c00c1000 { clock-frequency = <300000000>;};
			sdhc0:sdhc@c00c5000 {
			      clk-input = <(I_PLL2 | I_GATE_PCLK)>;
			};
			sdhc1:sdhc@c00cc000 {
			      clk-input = <(I_PLL2 | I_GATE_PCLK)>;
			};
			sdhc2:sdhc@c00cd000 {
			      clk-input = <(I_PLL2 | I_GATE_PCLK)>;
			};
			timer0:timer@c00b9000 {
			      clk-input = <I_PLL2>;
			};
			timer1:timer@c00bb000 {
			      clk-input = <I_PLL2>;
			};
			pwm0:pwm0@c00ba000 {
			      clk-input = <I_PLL2>;
			};
		};

		rtc@c0010c00 {
			status = "okay";
		};

		timer@c0017000 {
			clocks =  <&timer0>, <&timer1>;
			clock-names = "timer0", "timer1";
		};

		nexell_usbphy: nexell-usbphy@c0012000 {
			status = "okay";
		};

		ehci@c0030000 {
			samsung,vbus-gpio = <&gpio_a 16 0>;
			status = "okay";
			port@0 {
				status = "okay";
			};
			port@1 {
				status = "okay";
			};
		};

		ohci@c0020000 {
			status = "okay";
			port@0 {
				status = "okay";
			};
		};

		dwc2otg@c0040000 {
			gpios = <&gpio_a 15 0>;
			status = "okay";
		};

		gmac0:ethernet@c0060000 {
			pinctrl-names = "default";
			pinctrl-0 = <&gmac_pins>;

			status = "okay";
			#address-cells = <0x1>;
			#size-cells = <0x0>;

			snps,phy-addr = <3>;
			snps,reset-gpio = <&gpio_a 12 0>;
			snps,reset-active-low;
			snps,reset-delays-us = <0 10000 30000>;

			boost-busfreq;
			boost-busfreq-timeout = <100000>;

			mdio {
				#address-cells = <1>;
				#size-cells = <0>;

				ethernet_phy: ethernet-phy@3 {
					reg = <3>;
					fixed-link {
						speed = <1000>;
						full-duplex;
					};
				};
			};
		};

		adc:adc@c0053000 {
			status = "okay";
		};

		watchdog@c0019000 {
			status = "okay";
		};

		pinctrl@C0010000 {
			pinctrl-names = "default";
			pinctrl-0 = <&initial>;

			initial: initial-state {
				/* Turn-Off USB-OTG OUTPUT */
				PIN_OUT(gpioa-19, HIGH, FUNC0, NONE, STR0);
			};

			pmic_irq:pmic_irq{
				nexell,pins = "alive-5";
				nexell,pin-function = <NX_PIN_FUNC0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};

			sdmmc2_cclk: sdmmc2-cclk {
				nexell,pin-strength = <NX_PIN_STR3>;
			};

			sdmmc2_cmd: sdmmc2-cmd {
				nexell,pin-strength = <NX_PIN_STR3>;
			};

			sdmmc2_bus4: sdmmc2-bus-width4 {
				nexell,pin-strength = <NX_PIN_STR2>;
			};

			tsp_irq: tsp-irq {
				nexell,pins = "gpiob-8";
				nexell,pin-function = <NX_PIN_FUNC0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};

			tsp_reset: tsp-reset {
				nexell,pins = "gpioc-25";
				nexell,pin-function = <NX_PIN_FUNC0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};
		};

		video-codec@c0080000 {
			status = "okay";
			sram = <0 0>;
		};

		i2s_0:i2s@c0055000 {
			#sound-dai-cells = <1>;
			master-mode = <1>;
			mclk-in = <0>;
			trans-mode = <1>;
			frame-bit = <48>;
			sample-rate = <48000>;
			pre-supply-mclk = <1>;
			status = "okay";
		};

		i2s_1:i2s@c0056000 {
			#sound-dai-cells = <1>;
			master-mode = <0>;
			mclk-in = <1>;
			trans-mode = <1>;
			frame-bit = <48>;
			sample-rate = <48000>;
			pre-supply-mclk = <0>;
			status = "okay";
		};

		vip_0:vip@c0063000 {
			status = "okay";
		};

		i2c_0:i2c@c00a4000 {
			samsung,i2c-max-bus-freq = <100000>;
			status = "okay";
		};

		mipi_csi:mipi_csi@c00d0000 {
			data_lane = <2>;
			pllval = <750>;
			hssettle = <7 7 7 7>;
			status = "okay";
		};

		clipper_0:clipper0@c0063000 {
			interface_type = <NX_CAPTURE_INTERFACE_MIPI_CSI>;
			gpios = <&gpio_a 17 0 &gpio_a 3 0 &gpio_a 6 0>;
			data_order = <NX_VIN_Y0CBY1CR>;
			status = "okay";
			sensor {
				type = <NX_CAPTURE_SENSOR_I2C>;
				i2c_name = "S5K4ECGA";
				i2c_adapter = <0>;
				addr = <0x56>;
			};
			power {
				enable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 2 1 2 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 1 1 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 1 1 NX_ACTION_END
				>;

				disable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 0 1 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 0 1 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 2 0 2 NX_ACTION_END
				>;
			};
		};

		scaler@c0066000 {
			status = "okay";
		};
	};	/*** soc ***/

	backlight: pwm-backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm 0 20000 0>;
		pwm-names = "pwm-backlight";
		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
				     10 11 12 13 14 15 16 17 18 19
				     20 21 22 23 24 25 26 27 28 29
				     30 31 32 33 34 35 36 37 38 39
				     40 41 42 43 44 45 46 47 48 49
				     50 51 52 53 54 55 56 57 58 59
				     60 61 62 63 64 65 66 67 68 69
				     70 71 72 73 74 75 76 77 78 79
				     80 81 82 83 84 85 86 87 88 89
				     90 91 92 93 94 95 96 97 98 99
				    100>;
		default-brightness-level = <60>;
		status = "okay";
	};

	panel: panel-simple {
		compatible = "dongguan,gst7d0038";
		backlight = <&backlight>;
		status = "okay";

		port {
			lvds_panel: endpoint {
			};
		};
	};

	i2c_gpio7:i2c@7 {
		compatible = "i2c-gpio";
		gpios = <&gpio_a 24 0 /* sda */
			&gpio_a 23 0 /* scl */
			>;
		i2c-gpio,delay-us = <100>;
		#address-cells = <1>;
		#size-cells = <0>;
	};

	i2c_gpio10: i2c@10 {
		compatible = "i2c-gpio";
		gpios = <&gpio_e 23 0	/* sda */
			&gpio_e 22 0	/* scl */
			>;

		i2c-gpio,delay-us = <1>;	/* ~100kHz */
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

		nxe2000@32 {
			compatible = "nexell,nxe2000";
			reg = <0x32>;
			interrupt-parent = <&alive_0>;
			interrupts = <0x5 IRQ_TYPE_EDGE_FALLING>;
			pinctrl-names = "default";
			pinctrl-0 = <&pmic_irq>;
		};
	};

	snd_null: snd_null@10 {
		#sound-dai-cells = <0>;
		compatible = "nexell,snd-null";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0 0>;
	};

	sound0: sound@0 {
		compatible = "simple-audio-card";
		simple-audio-card,name = "Artik710 raptor Audio";
		simple-audio-card,mclk-fs = <256>;
		status = "okay";

		simple-audio-card,dai-link@0 {
			format = "i2s";
			cpu {
				sound-dai = <&i2s_0 0>;
			};

			codec {
				sound-dai = <&snd_null>;
			};
		};

		simple-audio-card,dai-link@1 {
			format = "i2s";
			cpu {
				sound-dai = <&i2s_1 0>;
			};

			codec {
				sound-dai = <&snd_null>;
			};
		};
	};

	gpio_key: gpio_keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;

		power {
			label = "Power";
			gpios = <&alive_0 0 1>;
			linux,code = <KEY_POWER>;
			gpio-key,wakeup;
		};
	};

	regulators {
		VCC_DCDC0:
			dcdc1	{ PMIC_PDATA_INIT( 0,
				"nxe2000_dcdc1",
				900000, 1500000,
				1100000, 1, 0, 0x4)
				regulator-always-on;
				regulator-boot-on;};
		VCC_DCDC1:
			dcdc2	{ PMIC_PDATA_INIT( 1,
				"nxe2000_dcdc2",
				1000000, 1500000,
				1200000, 1, 0, 0x4)
				regulator-always-on;
				regulator-boot-on;};
		VCC_DCDC2:
			dcdc3	{ PMIC_PDATA_INIT( 2,
				"nxe2000_dcdc3",
				1000000, 3500000,
				3300000, 1, 1, 0xF)
				regulator-always-on;
				regulator-boot-on;};
		VCC_DCDC3:
			dcdc4	{ PMIC_PDATA_INIT( 3,
				"nxe2000_dcdc4",
				1000000, 2000000,
				1500000, 1, 0, 0xF)
				regulator-always-on;
				regulator-boot-on;};
		VCC_DCDC4:
			dcdc5	{ PMIC_PDATA_INIT( 4,
				"nxe2000_dcdc5",
				1000000, 2000000,
				1500000, 1, 0, 0x4)
				regulator-always-on;
				regulator-boot-on;};
		VCC_LDO0:
			ldo1	{ PMIC_PDATA_INIT( 5,
				"nxe2000_ldo1",
				1000000, 3500000,
				3300000, 0, 1, 0x0)
				regulator-boot-on;};
		VCC_LDO1:
			ldo2	{ PMIC_PDATA_INIT( 6,
				"nxe2000_ldo2",
				1000000, 3500000,
				3300000, 0, 1, 0x0)
				regulator-boot-on;};
		VCC_LDO2:
			ldo3	{ PMIC_PDATA_INIT( 7,
				"nxe2000_ldo3",
				1000000, 3500000,
				1800000, 1, 1, 0xF)
				regulator-always-on;
				regulator-boot-on;};
		VCC_LDO3:
			ldo4	{ PMIC_PDATA_INIT( 8,
				"nxe2000_ldo4",
				1000000, 3500000,
				1800000, 1, 1, 0x2)
				regulator-always-on;
				regulator-boot-on;};
		VCC_LDO4:
			ldo5	{ PMIC_PDATA_INIT( 9,
				"nxe2000_ldo5",
				1000000, 3500000,
				3300000, 0, 1, 0x0)
				regulator-boot-on;};
		VCC_LDO5:
			ldo6	{ PMIC_PDATA_INIT(10,
				"nxe2000_ldo6",
				1000000, 3500000,
				3300000, 1, 1, 0xF)
				regulator-always-on;
				regulator-boot-on;};
		VCC_LDO6:
			ldo7	{ PMIC_PDATA_INIT(11,
				"nxe2000_ldo7",
				1000000, 3500000,
				3300000, 1, 1, 0x0)
				regulator-always-on;
				regulator-boot-on;};
		VCC_LDO7:
			ldo8	{ PMIC_PDATA_INIT(12,
				"nxe2000_ldo8",
				1000000, 3500000,
				3300000, 0, 1, 0xF)
				regulator-boot-on;};
		VCC_LDO8:
			ldo9	{ PMIC_PDATA_INIT(13,
				"nxe2000_ldo9",
				1000000, 3500000,
				1800000, 0, 1, 0x2)
				regulator-boot-on;};
		VCC_LDO9:
			ldo10	{ PMIC_PDATA_INIT(14,
				"nxe2000_ldo10",
				1000000, 3500000,
				1200000, 1, 1, 0x4)
				regulator-always-on;
				regulator-boot-on;};
		VCC_RTC0:
			ldortc1	{ PMIC_PDATA_INIT(15,
				"nxe2000_rtc1",
				1700000, 3500000,
				1800000, 1, 1, 0xF)
				regulator-always-on;
				regulator-boot-on;};
		VCC_RTC1:
			ldortc2	{ PMIC_PDATA_INIT(16,
				"nxe2000_rtc2",
				1000000, 3500000,
				1000000, 1, 1, 0xF)
				regulator-always-on;
				regulator-boot-on;};
	}; /* regulators */

};

&decimator_0 {
	status = "okay";
};

&dp_drm {
        status = "okay";
        ports {
                port@0 {
                        reg = <0>;
                        back_color = < 0x0 >;
                        color_key = < 0x0 >;
			plane-names = "video", "primary", "rgb";
		};
                port@1 {
                        reg = <1>;
                        back_color = < 0x0 >;
                        color_key = < 0x0 >;
			plane-names = "video", "primary";
		};
       };
};

&dp_drm_hdmi {
	ddc-i2c-bus = <&i2c_gpio7>;
	enable-gpios = <&gpio_a 21 0>;
	status = "ok";
	q_range = <0>;
};

&dp_drm_lvds {
	status = "ok";

	remote-endpoint = <&lvds_panel>;

	dp_control {
		clk_src_lv0 = <3>;
		clk_div_lv0 = <16>;
		clk_src_lv1 = <7>;
		clk_div_lv1 = <1>;
		out_format = <3>;
	};
};

&dw_mmc_0 {
	num-slots = <1>;
	bus-width = <4>;
	cap-sd-highspeed;
	clock-frequency = <100000000>;
	card-detect-delay = <200>;
	disable-wp;
	cd-gpios = <&gpio_b 16 0>;
	cd-inverted;
	nexell,drive_dly = <0x0>;
	nexell,drive_shift = <0x02>;
	nexell,sample_dly = <0x00>;
	nexell,sample_shift = <0x01>;
	status = "okay";
};

&i2c_2 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	touchscreen@20 {
		compatible = "zinitix,zinitix_touch";
		reg = <0x20>;
		interrupt-parent = <&gpio_b>;
		interrupts = <8 IRQ_TYPE_EDGE_FALLING>;
		reset-gpio = <&gpio_c 25 1>;
		int-gpio = <&gpio_b 8 0>;
		pinctrl-names = "default";
		pinctrl-0 = <&tsp_irq &tsp_reset>;
	};
};

&serial0 {
	status = "okay";
};

&serial2 {
	status = "okay";
};

&serial3 {
	status = "okay";
};

&serial4 {
	status = "okay";
};

&serial5 {
	status = "okay";
};

&spi_0 {
	status = "okay";
	cs-gpios = <&gpio_c 30 0>;
	spidev@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <20000000>;
		controller-data {
			samsung,spi-feedback-delay = <0>;
		};
	};
};

&spi_2 {
	status = "okay";
	spi-slave;
};

&pwm {
	status = "okay";
	clocks =  <&pwm0>, <&pwm2>;
	clock-names = "pwm-tclk0", "pwm-tclk1";
	pinctrl-0 = <&pwm0_pin &pwm1_pin>;
	samsung,pwm-outputs = <0>, <1>;
};
